<project name="sdl-parser" default="compile" basedir=".">
    <property name="javacc-home" location="./resources/lib/javacc"/>
    <property name="src" location="./src"/>
    <property name="build" location="./build"/>

    <property name="gen-parser-generated" value="${src}/hub/sam/sdlplus/parser/"/>
    <property name="gen-parser-grammar-jj" value="${gen-parser-generated}/SdlplusParser.jj"/>

    <path id="classpath">
        <pathelement path="${build}"/>
        <fileset dir="./resources/lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="sourcepath">
        <pathelement path="${src}"/>
        <pathelement path="resources/generated-src/"/>
    </path>

    <target name="init">
        <tstamp/>
        <mkdir dir="${build}"/>
        <mkdir dir="resources/generated-src"/>
    </target>

    <target name="clean">
        <delete dir="${build}"/>
        <delete dir="resources/generated-src"/>
        <delete file="resources/models/sdlr-wcse-mof2.xml"/>
        <delete file="${src}/hub/sam/sdlplus/semantics/NameTable.java"/>
        <delete file="${src}/hub/sam/sdlplus/semantics/ResolveConcreteSyntaxExtensions.java"/>
        <delete>
            <fileset dir="${src}/hub/sam/sdlplus/parser">
                <include name="*.java"/>
                <exclude name="*.jj"/>
            </fileset>
        </delete>
    </target>

    <target name="gen-parser-grammar" if="gen-parser-grammar-jjt">
        <jjtree
                target="${gen-parser-grammar-jjt}"
                outputdirectory="${gen-parser-generated}"
                javacchome="${javacc-home}"
                />
    </target>

    <target name="gen-parser" depends="init,gen-parser-grammar">
        <javacc
                target="${gen-parser-grammar-jj}"
                outputdirectory="${gen-parser-generated}"
                javacchome="${javacc-home}"
                />
    </target>

    <target name="prepare-md-model" depends="init">
        <javac srcdir="${src}" debug="on" destdir="${build}" source="1.5" nowarn="yes">
            <include name="hub/sam/sdlplus/ant/UpgradeXmi.java"/>
            <classpath refid="classpath"/>
        </javac>
        <taskdef name="upgrade" classname="hub.sam.sdlplus.ant.UpgradeXmi" classpathref="classpath"/>
        <upgrade inKind="md" outKind="mof" inFile="resources/models/sdlr-wcse-md-out.mdxml"
                 outFile="resources/models/sdlr-wcse-mof2.xml"/>
    </target>

    <target name="gen-repositories" depends="prepare-md-model">
        <taskdef name="mof" classname="hub.sam.mof.ant.GenerateCode" classpathref="classpath"/>
        <mof src="resources/models/sdlr-wcse-mof2.xml" destdir="resources/generated-src"/>
    </target>

    <target name="compile" depends="gen-parser, gen-repositories, mopa" description="compile the source">
        <javac destdir="${build}" source="1.5" debug="on">
            <src refid="sourcepath"/>
            <classpath refid="classpath"/>
        </javac>
    </target>

    <target name="mopa" depends="init">
        <taskdef name="mopa" classname="hub.sam.mopa.MopaAntTask">
            <classpath refid="classpath"/>
        </taskdef>
        <mopa target="${src}/hub/sam/sdlplus/semantics/NameTable.mopa"/>
        <mopa target="${src}/hub/sam/sdlplus/semantics/ResolveConcreteSyntaxExtensions.mopa"/>
    </target>

    <target name="test" depends="compile">
        <java fork="true" classname="hub.sam.sdlplus.SdlCompiler">
            <assertions>
                <enable/>
            </assertions>
            <classpath refid="classpath"/>
            <arg value="resources/test-files/Vortrag.pr"/>
        </java>
    </target>
</project>
